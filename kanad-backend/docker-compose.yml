version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kanad-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://kanad_user:kanad_password@db:5432/kanad_experiments
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kanad-worker
    command: celery -A workers.celery_app worker --loglevel=info --concurrency=4
    environment:
      - DATABASE_URL=postgresql://kanad_user:kanad_password@db:5432/kanad_experiments
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: kanad-db
    environment:
      - POSTGRES_USER=kanad_user
      - POSTGRES_PASSWORD=kanad_password
      - POSTGRES_DB=kanad_experiments
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis (Cache + Message Broker)
  redis:
    image: redis:7-alpine
    container_name: kanad-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
